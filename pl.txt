compiler
	converts high level language to low level language


stages of a compiler

1. Parsing:
	take the sources code and turn it into a representation of that code,breaking it into tokens 

2. Transformation:
	Take that source code and transforms it to do what the compiler wants it to do.

3. Generation:
  	Takes the transformed representation and turns it into a new string of code.


Parsing

we don't want every character in our string we want the pieces the key word we can use to form a token

Lexical analysis
	this is when we take the entire string and convert it into token.

Extracting token

1. accept an input string of code
2. create a variable for tracing or position like a cursor
3. make an array of token
4. write a while loop that iterates thorught the source code input.
5. chec each token see if it matches one of your types
6. add it to the array of token . 
	

syntatic analysis